<?xml version="1.0" encoding="utf-8"?>
<topic id="eea75ebd-074d-485e-855a-0212386f1aa7" revisionNumber="1">
  <developerConceptualDocument xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink">
    <introduction>
      <para>Connected properties only allow attaching data to carrier objects, but you may attach a delegate as data. It can then be used as a connected method.</para>
    </introduction>
    <section address="Section1">
      <title>Connected Methods</title>
      <content>

<para>This is similar to setting delegates on an <codeEntityReference>T:System.Dynamic.ExpandoObject</codeEntityReference>.</para>

<code language="C#">
<![CDATA[
internal struct LogMethodTag {};

public void Log(object obj)
{
  var logMethodProperty = obj.GetConnectedProperty<Action, LogMethodTag>();
  Action logMethod;
  if (obj.TryGet(out logMethod))
  {
    // This instance has a connected Log method.
    logMethod();
  }
  else
  {
    // This instance does not have a connected Log method.
    GenericLog();
  }
}
]]>
</code>

<para>Note that connected methods are different than extension methods. Extension methods extend a type, and can be called for any instance of that type. Connected methods extend an instance, so they can be overridden on a per-instance basis.</para>

      </content>
    </section>
  </developerConceptualDocument>
</topic>