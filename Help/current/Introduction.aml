<?xml version="1.0" encoding="utf-8"?>
<topic id="71bdf549-1f21-4bd2-9fb7-d2e256a562fc" revisionNumber="1">
  <developerConceptualDocument xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink">
    <introduction>
      <para>The Nito Connected Properties library provides a simple API to attach properties to most .NET objects at runtime.</para>
    </introduction>
    <section address="Introduction">
      <title>The 2-Minute Intro: Connecting a "Name" to (almost) any Object</title>
      <content>

<para>The following code shows how to connect a "Name" property to an object:</para>

<code language="C#">
<![CDATA[
// Use the Connected Properties library.
using Nito.ConnectedProperties;
using Nito.ConnectedProperties.Implicit;

class Program
{
  // Declare the "Name" connected property.
  public struct NameProperty {};

  // Display the Name of any object passed into this method.
  public static void DisplayName(object obj)
  {
    var nameProperty = obj.GetConnectedProperty<string, NameProperty>();
    Console.WriteLine("Name: " + nameProperty.Get());
  }

  static void Main()
  {
    // Create an object to name.
    var obj = new object();

    // I dub this object "Bob".
    var nameProperty = obj.GetConnectedProperty<string, NameProperty>();
    nameProperty.Set("Bob");

    // Pass the object to the DisplayName method, which is able to retrieve the connected property.
    DisplayName(obj);
  }
}
]]>
</code>

      </content>
    </section>
    <section address="Overview">
      <title>Overview</title>
      <content>

<para>Nito.ConnectedProperties provides an API for attaching properties to most objects at runtime.</para>

<para>A <newTerm>connectible property</newTerm> is a piece of data that may be connected to a <newTerm>carrier object</newTerm> at runtime. A connectible property has a type, and is either <newTerm>connected</newTerm> or <newTerm>disconnected</newTerm>. Only properties that are connected have values.</para>

<alert class="note">
<para>In the documentation and IntelliSense, the term <newTerm>connected property</newTerm> is often used as a synonym for <newTerm>connectible property</newTerm>. The term <newTerm>connected property</newTerm> does not imply that the connectible property is actually <legacyItalic>connected</legacyItalic>. If there is any possibility of confusion, the term <newTerm>connectible property</newTerm> is used instead of <newTerm>connected property</newTerm>.</para>
</alert>

<para>A <newTerm>carrier object</newTerm> is any instance capable of having properties connected to it - specifically, a reference type that uses reference equality.</para>

<para>A <newTerm>connector</newTerm> manages the connections between connectible properties and carrier objects. Connectors may be used explicitly or implicitly.</para>

<para>All accesses to connectible property values are thread-safe (including <codeInline>Get</codeInline>, <codeInline>Set</codeInline>, <codeInline>Connect</codeInline>, and <codeInline>Disconnect</codeInline> operations). However, the actual <legacyItalic>value</legacyItalic> of the connected property is only thread-safe if the connected property type is thread-safe (e.g., <codeEntityReference>T:System.Collections.Concurrent.BlockingCollection`1</codeEntityReference>).</para>

      </content>
    </section>
    <section address="GettingStarted">
      <title>Getting Started</title>
      <content>

<para>Most users should simply add a reference to the <codeInline>Net40\Release\ConnectedProperties.dll</codeInline> or <codeInline>SL4\Release\ConnectedProperties.dll</codeInline>, as appropriate. IntelliSense is automatically applied.</para>

<alert class="note">
<para>The <codeInline>Net40</codeInline> binaries should work with any .NET 4.0 Client or Full Profile projects. This includes class libraries, ASP.NET, WPF, etc. The <codeInline>SL4</codeInline> binaries should work with Silverlight 4.0 projects. Earlier versions of Silverlight, and Silverlight for Windows Phone / XNA are not supported.</para>
</alert>

<para>The <codeInline>Release</codeInline> build does perform precondition checks, to ensure the library is being used correctly. If you need minimum overhead, you can use the <codeInline>Release (no precondition checks)</codeInline> build.</para>

<para>If you suspect a bug in the Connected Properties library itself, you may reference the <codeInline>Net40\Debug\ConnectedProperties.dll</codeInline> or <codeInline>SL4\Debug\ConnectedProperties.dll</codeInline> instead of the <codeInline>Release</codeInline> versions. This will add many more checks at runtime, such as internal consistency checks.</para>

      </content>
    </section>
  </developerConceptualDocument>
</topic>